{"version":3,"sources":["webpack://HlsPlayer/webpack/bootstrap","webpack://HlsPlayer/./node_modules/event-emitter/index.js","webpack://HlsPlayer/./node_modules/es5-ext/object/is-value.js","webpack://HlsPlayer/./node_modules/type/value/is.js","webpack://HlsPlayer/./src/ts/ts.js","webpack://HlsPlayer/./node_modules/concat-typed-array/lib/index.js","webpack://HlsPlayer/./src/fmp4/buffer.js","webpack://HlsPlayer/./src/media/mse.js","webpack://HlsPlayer/./src/index.js","webpack://HlsPlayer/external \"Player\"","webpack://HlsPlayer/./src/hls.js","webpack://HlsPlayer/./node_modules/d/index.js","webpack://HlsPlayer/./node_modules/type/plain-function/is.js","webpack://HlsPlayer/./node_modules/type/function/is.js","webpack://HlsPlayer/./node_modules/type/prototype/is.js","webpack://HlsPlayer/./node_modules/type/object/is.js","webpack://HlsPlayer/./node_modules/es5-ext/object/assign/index.js","webpack://HlsPlayer/./node_modules/es5-ext/object/assign/is-implemented.js","webpack://HlsPlayer/./node_modules/es5-ext/object/assign/shim.js","webpack://HlsPlayer/./node_modules/es5-ext/object/keys/index.js","webpack://HlsPlayer/./node_modules/es5-ext/object/keys/is-implemented.js","webpack://HlsPlayer/./node_modules/es5-ext/object/keys/shim.js","webpack://HlsPlayer/./node_modules/es5-ext/function/noop.js","webpack://HlsPlayer/./node_modules/es5-ext/object/valid-value.js","webpack://HlsPlayer/./node_modules/es5-ext/object/normalize-options.js","webpack://HlsPlayer/./node_modules/es5-ext/string/#/contains/index.js","webpack://HlsPlayer/./node_modules/es5-ext/string/#/contains/is-implemented.js","webpack://HlsPlayer/./node_modules/es5-ext/string/#/contains/shim.js","webpack://HlsPlayer/./node_modules/es5-ext/object/valid-callable.js","webpack://HlsPlayer/./src/ts/m3u8.js","webpack://HlsPlayer/./src/util/xhr.js","webpack://HlsPlayer/./src/ts/parser.js","webpack://HlsPlayer/./node_modules/concat-typed-array/lib/concat.js","webpack://HlsPlayer/./src/ts/stream.js","webpack://HlsPlayer/./src/ts/expGolomb.js","webpack://HlsPlayer/./src/fmp4/mp4.js","webpack://HlsPlayer/./src/media/task.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","once","off","emit","methods","descriptors","base","require","callable","apply","Function","defineProperties","descriptor","configurable","writable","type","listener","self","this","arguments","__eeOnceListener__","data","__ee__","push","listeners","candidate","length","splice","args","Array","slice","_undefined","val","StreamType","TS","ctx","buffer","Stream","header","Header","body","Payload","sync","readUint8","next","readUint16","error","payload","priority","pid","scrambling","adaptation","continuity","packet","root","PAT","CAT","TSDT","PATSpace","some","item","PMT","ts","PMTSpace","filter","Media","streamType","skip","tabelID","zero","sectionLength","streamID","current","sectionNumber","lastSectionNumber","N","list","programNumber","program","concat","dataview","byteLength","position","crc32","readUint32","it","tableID","order","lastOrder","PCR_PID","programLength","es","map","start","adaptationLength","discontinue","access","PCR","OPCR","splicePoint","transportPrivate","adaptationField","_start","programClockBase","programClockExtension","originProgramClockBase","originProgramClockExtension","spliceCountdown","transportPrivateData","piecewise","seamless","ltwValid","ltwOffset","readUint24","piecewiseRate","readInt8","spliceType","dtsNextAU1","marker1","dtsNextAU2","marker2","dtsNextAU3","lastStuffing","Error","packetLength","ptsDTSFlag","escrFlag","esRateFlag","dsmFlag","additionalFlag","crcFlag","extensionFlag","pesHeaderLength","N1","pts","dts","escr","ex","esRate","additionalCopyInfo","pesCRC","ES","back","sps","flag","check","readSPS","pps","readPPS","nal","info","ExpGolomb","Uint8Array","vdata","Merge","writeUint32","id","layer","absent","audioObjectType","profile","frequencyIndex","frequence","channel","frameLength","audioConfig","getAudioConfig","sectionIndicator","version","currentNextIndicator","offset","forEach","set","sampleIndex","userAgent","navigator","toLowerCase","config","extensionSampleIndex","test","indexOf","obj","_concat","_concat2","default","Buffer","window","console","MSE","codecs","mediaSource","MediaSource","url","URL","createObjectURL","queue","addEventListener","sourceBuffer","addSourceBuffer","e","shift","appendBuffer","updating","state","end","remove","readyState","endOfStream","duration","isTypeSupported","Player","install","player","sniffer","util","preloadTime","browser","isSupported","hls","currentSrc","paused","pause","play","currentTime","HLS","mse","download","m3u8","addClass","live","createDom","controls","appendChild","timer","setInterval","buffered","len","clearInterval","clearTimeout","loadData","time","range","getBufferedRange","seek","isEnded","init","inited","cache","M3U8","seeker","segment","downloaded","Task","res","Parser","parse","segments","every","pes","video","audio","_pes","PES","as","meta","width","height","pixelRatio","channelCount","timescale","samplerate","videoSamples","audioSamples","undefined","startDTS","Math","min","initSegment","write","MP4","ftyp","moov","createVideoFragment","createAudioFragment","moof","mdat","update","samples","samplesLength","sampleDuration","idx","size","addFragment","firstFlags","flags","startPTS","j","jLen","isValue","isPlainFunction","assign","normalizeOpts","contains","dscr","w","options","desc","gs","isFunction","classRe","functionToString","toString","isPrototype","isObject","constructor","possibleTypes","foo","bar","trzy","keys","max","dest","src","TypeError","process","opts1","result","String","str","searchString","fn","retryMax","retry","isEnd","rangeDuration","TYPE","ENDLIST","Promise","resolve","reject","XHR","then","responseText","metaCtx","substring","endList","lastIndexOf","Tag","EXTINFItem","RegExp","EXTINF","source","$2","$1","match","title","_url","catch","err","fetch","toLocaleLowerCase","rightnow","setTimeout","count","a","document","createElement","href","b","aArr","pathname","replace","split","bArr","pop","find","protocol","host","join","EXTM3U","DURATION","SEQUENCE","VERSION","STREAM","method","R","XMLHttpRequest","_method","toUpperCase","_data","k","responseType","open","send","setRequestHeader","onload","status","onerror","pat","sub","pmt","cur","videoGroup","audioGroup","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","arr","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","ArrayBuffer","DataView","loop","floor","last","readByte","sign","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","bytesAvailable","word","bitsAvailable","workingBytes","availableBytes","subarray","skipBytes","loadWord","bits","valu","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","profileIdc","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","readUByte","readBoolean","skipEG","skipUEG","skipScalingList","chromaFormatIdc","picOrderCntType","ceil","UINT32_MAX","pow","FMP4","charCodeAt","mvhd","trak1","videoTrak","trak2","audioTrak","mvex","upperWordDuration","lowerWordDuration","bytes","tkhd","mdia","content","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","stsd","stts","stsc","stsz","stco","mp4a","avc1","esds","configlen","hSpacing","vSpacing","avcc","btrt","pasp","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","sdtp","trun","upper","lower","sdtpLength","sampleCount","callback","xhr","target","response","onabort","abort","Queue","sended","wait","limit","run","cancel"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","import Concat from 'concat-typed-array';\nimport Stream from './stream';\nimport ExpGolomb from './expGolomb';\n\nconst StreamType = {\n    0x01: ['video', 'MPEG-1'],\n    0x02: ['video', 'MPEG-2'],\n    0x1b: ['video', 'AVC.H264'],\n    0x24: ['video', 'HEVC'],\n    0xea: ['video', 'VC-1'],\n    0x03: ['audio', 'MPEG-1'],\n    0x04: ['audio', 'MPEG-2'],\n    0x0f: ['audio', 'MPEG-2.AAC'],\n    0x11: ['audio', 'MPEG-4.AAC'],\n    0x80: ['audio', 'LPCM'],\n    0x81: ['audio', 'AC3'],\n    0x06: ['audio', 'AC3'],\n    0x82: ['audio', 'DTS'],\n    0x83: ['audio', 'Dolby TrueHD'],\n    0x84: ['audio', 'AC3-Plus'],\n    0x85: ['audio', 'DTS-HD'],\n    0x86: ['audio', 'DTS-MA'],\n    0xa1: ['audio', 'AC3-Plus-SEC'],\n    0xa2: ['audio', 'DTS-HD-SEC'],\n};\n\nconst readSPS = (buffer)=>{\n    let start = buffer.readUint32();\n    let sps = [], next, flag = true, check = false;\n\n    if (start === 1) {\n        do {\n            next = buffer.readUint8();\n            if (!check) {\n                if ((next & 0x1f) !== 7) {\n                    flag = false;\n                    buffer.back(5);\n                    break;\n                } else {\n                    check = true;\n                }\n            }\n            if (next !== 0) {\n                sps.push(next);\n            } else {\n                next = buffer.readUint24();\n                if (next === 1) {\n                    flag = false;\n                    buffer.back(4);\n                } else {\n                    buffer.back(4);\n                    sps.push(buffer.readUint8());\n                }\n            }\n        } while (flag);\n    } else {\n        buffer.back(4);\n    }\n    return sps;\n};\n\nconst readPPS = (buffer)=>{\n    let start = buffer.readUint32();\n    let pps = [], next, flag = true, check = false;\n    if (start === 1) {\n        do {\n            next = buffer.readUint8();\n            if (!check) {\n                if ((next & 0x1f) !== 8) {\n                    flag = false;\n                    buffer.back(5);\n                    break;\n                } else {\n                    check = true;\n                }\n            }\n            if (next !== 0) {\n                pps.push(next);\n            } else {\n                next = buffer.readUint16();\n                if (next === 1) {\n                    flag = false;\n                    buffer.back(3);\n                } else {\n                    buffer.back(3);\n                    pps.push(buffer.readUint8());\n                }\n            }\n        } while (flag);\n    } else {\n        buffer.back(4);\n    }\n    return pps;\n};\n\nclass TS {\n    constructor (ctx) {\n        let buffer = new Stream(ctx);\n        this.header = new TS.Header(buffer);\n        this.body = new TS.Payload(buffer, this);\n    }\n    static Header (buffer) {\n        this.sync = buffer.readUint8();\n        let next = buffer.readUint16();\n        this.error = next >>> 15;\n        this.payload = next >>> 14 & 1;\n        this.priority = next >>> 13 & 1;\n        this.pid = next & 0x1fff;\n        next = buffer.readUint8();\n        this.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n        /**\n         * 00 ISO/IEC未来使用保留\n         * 01 没有调整字段，仅含有184B有效净荷\n         * 02 没有有效净荷，仅含有183B调整字段\n         * 03 0~182B调整字段后为有效净荷\n         */\n        this.adaptation = next >> 4 & 0x3;\n        this.continuity = next & 15;\n        this.packet = this.pid === 0 ? 'PAT' : 'MEDIA';\n    }\n    static Payload (buffer, root) {\n        let header = root.header, pid = header.pid, r;\n        switch (pid) {\n            case 0:\n                r = new TS.PAT(buffer);\n                break;\n            case 1:\n                r = new TS.CAT(buffer);\n                break;\n            case 2:\n                r = new TS.TSDT(buffer);\n                break;\n            case 0x1fff:\n                r = false;\n                break;\n            default:\n                if (TS.PATSpace.some((item) => { return item.pid === pid; })) {\n                    r = new TS.PMT(buffer, root);\n                } else {\n                    let ts = TS.PMTSpace ? TS.PMTSpace.filter((item) => item.pid === pid) : [];\n                    r = ts.length ? new TS.Media(buffer, root, StreamType[ts[0].streamType][0]) : false;\n                }\n        }\n        return r;\n    }\n    static PAT (buffer) {\n        let next = buffer.readUint8();\n        buffer.skip(next);\n        next = buffer.readUint8();\n        this.tabelID = next;\n        next = buffer.readUint16();\n        this.error = next >>> 7;\n        this.zero = next >>> 6 & 1;\n        this.sectionLength = next & 0xfff;\n        this.streamID = buffer.readUint16();\n        this.current = buffer.readUint8() & 1;\n        this.sectionNumber = buffer.readUint8();\n        this.lastSectionNumber = buffer.readUint8();\n        // N=(section_length-9)/4\n        let N = (this.sectionLength - 9) / 4, list = [];\n        for (let i = 0; i < N; i++) {\n            let programNumber = buffer.readUint16();\n            let pid = buffer.readUint16() & 0x1fff;\n            list.push({\n                program: programNumber,\n                pid,\n                type: programNumber === 0 ? 'network' : 'mapPID',\n            });\n        }\n        this.list = list;\n        TS.PATSpace = TS.PATSpace.concat(list);\n        this.program = buffer.readUint16();\n        this.pid = buffer.readUint16() & 0x1fff;\n        if (buffer.dataview.byteLength - buffer.position >= 4) {\n            this.crc32 = buffer.readUint32();\n        }\n    }\n    static PMT (buffer, it) {\n        it.header.packet = 'PMT';\n        let next = buffer.readUint8();\n        buffer.skip(next);\n        next = buffer.readUint8();\n        this.tableID = next;\n        next = buffer.readUint16();\n        this.sectionLength = next & 0xfff;\n        this.program = buffer.readUint16();\n        this.current = buffer.readUint8() & 1;\n        this.order = buffer.readUint8();\n        this.lastOrder = buffer.readUint8();\n        this.PCR_PID = buffer.readUint16() & 0x1fff;\n        this.programLength = buffer.readUint16() & 0xfff;\n        let N = (this.sectionLength - 13) / 5, list = [];\n        for (let i = 0; i < N; i++) {\n            list.push({\n                streamType: buffer.readUint8(),\n                pid: buffer.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n                es: buffer.readUint16() & 0xfff,\n            });\n        }\n        this.list = list;\n        if (!TS.PMTSpace) {\n            TS.PMTSpace = [];\n        }\n        TS.PMTSpace = TS.PMTSpace.concat(list.map((item) => {\n            return {\n                pid: item.pid,\n                es: item.es,\n                streamType: item.streamType,\n                program: this.program,\n            };\n        }));\n        if (buffer.dataview.byteLength - buffer.position >= 4) {\n            this.crc32 = buffer.readUint32();\n        }\n    }\n    static Media (buffer, it, type) {\n        let header = it.header;\n        this.start = buffer.position;\n        this.type = type;\n        if (header.adaptation === 0x03) {\n            this.adaptationLength = buffer.readUint8();\n            if (this.adaptationLength > 0) {\n                let next = buffer.readUint8();\n                this.discontinue = next >>> 7;\n                this.access = next >>> 6 & 0x01;\n                this.priority = next >>> 5 & 0x01;\n                this.PCR = next >>> 4 & 0x01;\n                this.OPCR = next >>> 3 & 0x01;\n                this.splicePoint = next >>> 2 & 0x01;\n                this.transportPrivate = next >>> 1 & 0x01;\n                this.adaptationField = next & 0x01;\n                let _start = buffer.position;\n                if (this.PCR === 1) {\n                    this.programClockBase = buffer.readUint32() << 1;\n                    next = buffer.readUint16();\n                    this.programClockBase |= next >>> 15;\n                    this.programClockExtension = next & 0x1ff;\n                }\n                if (this.OPCR === 1) {\n                    this.originProgramClockBase = buffer.readUint32() << 1;\n                    next = buffer.readUint16();\n                    this.originProgramClockBase += next >>> 15;\n                    this.originProgramClockExtension = next & 0x1ff;\n                }\n                if (this.splicePoint === 1) {\n                    this.spliceCountdown = buffer.readUint8();\n                }\n                if (this.transportPrivate === 1) {\n                    let length = buffer.readUint8(), transportPrivateData = [];\n                    for (let i = 0; i < length; i++) {\n                        transportPrivateData.push(buffer.readUint8());\n                    }\n                }\n                if (this.adaptationField === 1) {\n                    let length = buffer.readUint8(), next = buffer.readUint8(), start = buffer.position;\n                    let ltw = next >>> 7, piecewise = next >>> 6 & 0x1, seamless = next >>> 5 & 0x1;\n                    if (ltw === 1) {\n                        next = buffer.readUint16();\n                        this.ltwValid = next >>> 15;\n                        this.ltwOffset = next & 0xefff;\n                    }\n                    if (piecewise === 1) {\n                        next = buffer.readUint24();\n                        this.piecewiseRate = next & 0x3fffff;\n                    }\n                    if (seamless === 1) {\n                        next = buffer.readInt8();\n                        this.spliceType = next >>> 4;\n                        this.dtsNextAU1 = next >>> 1 & 0x7;\n                        this.marker1 = next & 0x1;\n                        next = buffer.readUint16();\n                        this.dtsNextAU2 = next >>> 1;\n                        this.marker2 = next & 0x1;\n                        next = buffer.readUint16();\n                        this.dtsNextAU3 = next;\n                    }\n                    buffer.skip(length - 1 - (buffer.position - start));\n                }\n                let lastStuffing = this.adaptationLength - 1 - (buffer.position - _start);\n                buffer.skip(lastStuffing);\n            }\n        }\n        this.buffer = new Stream(buffer.buffer.slice(buffer.position));\n    }\n    static PES (ts) {\n        let it = ts[0], buffer = it.body.buffer;\n        let next = buffer.readUint24();\n        this.header = it.header;\n        if (next !== 1) {\n            throw new Error('this is not pes packet');\n        } else {\n            let streamID = buffer.readUint8();\n            if (streamID >= 0xe0 && streamID <= 0xef) {\n                this.type = 'video';\n            }\n            if (streamID >= 0xc0 && streamID <= 0xdf) {\n                this.type = 'audio';\n            }\n            let packetLength = buffer.readUint16();\n            this.packetLength = packetLength;\n            if (this.type === 'video' || this.type === 'audio') {\n                let next = buffer.readUint8();\n                let first = next >>> 6;\n                if (first !== 0x02) {\n                    throw new Error('error when parse pes header');\n                }\n                next = buffer.readUint8();\n                this.ptsDTSFlag = next >>> 6;\n                this.escrFlag = next >>> 5 & 0x01;\n                this.esRateFlag = next >>> 4 & 0x01;\n                this.dsmFlag = next >>> 3 & 0x01;\n                this.additionalFlag = next >>> 2 & 0x01;\n                this.crcFlag = next >>> 1 & 0x01;\n                this.extensionFlag = next & 0x01;\n                this.pesHeaderLength = buffer.readUint8();\n                let N1 = this.pesHeaderLength;\n\n                if (this.ptsDTSFlag === 2) {\n                    let pts = [];\n                    next = buffer.readUint8();\n                    pts.push(next >>> 1 & 0x07);\n                    next = buffer.readUint16();\n                    pts.push(next >>> 1);\n                    next = buffer.readUint16();\n                    pts.push(next >>> 1);\n                    this.pts = (pts[0] << 30 | pts[1] << 15 | pts[2]);\n                    N1 -= 5;\n                    // 视频如果没有dts用pts\n                    if (this.type === 'video') {\n                        this.dts = this.pts;\n                    }\n                }\n                if (this.ptsDTSFlag === 3) {\n                    let pts = [];\n                    next = buffer.readUint8();\n                    pts.push(next >>> 1 & 0x07);\n                    next = buffer.readUint16();\n                    pts.push(next >>> 1);\n                    next = buffer.readUint16();\n                    pts.push(next >>> 1);\n                    this.pts = (pts[0] << 30 | pts[1] << 15 | pts[2]);\n                    let dts = [];\n                    next = buffer.readUint8();\n                    dts.push(next >>> 1 & 0x07);\n                    next = buffer.readUint16();\n                    dts.push(next >>> 1);\n                    next = buffer.readUint16();\n                    dts.push(next >>> 1);\n                    this.dts = (dts[0] << 30 | dts[1] << 15 | dts[2]);\n                    N1 -= 10;\n                }\n                if (this.escrFlag === 1) {\n                    let escr = [], ex = [];\n                    next = buffer.readUint8();\n                    escr.push(next >>> 3 & 0x07);\n                    escr.push(next & 0x03);\n                    next = buffer.readUint16();\n                    escr.push(next >>> 13);\n                    escr.push(next & 0x03);\n                    next = buffer.readUint16();\n                    escr.push(next >>> 13);\n                    ex.push(next & 0x03);\n                    next = buffer.readUint8();\n                    ex.push(next >>> 1);\n                    this.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n                    N1 -= 6;\n                }\n                if (this.esRateFlag === 1) {\n                    next = buffer.readUint24();\n                    this.esRate = next >>> 1 & 0x3fffff;\n                    N1 -= 3;\n                }\n                if (this.dsmFlag === 1) {\n                    throw new Error('not support DSM_trick_mode');\n                }\n                if (this.additionalFlag === 1) {\n                    next = buffer.readUint8();\n                    this.additionalCopyInfo = next & 0x7f;\n                    N1 -= 1;\n                }\n                if (this.crcFlag === 1) {\n                    this.pesCRC = buffer.readUint16();\n                    N1 -= 2;\n                }\n                if (this.extensionFlag === 1) {\n                    throw new Error('not support extension');\n                }\n                if (N1 > 0) {\n                    buffer.skip(N1);\n                }\n                this.ES = new TS.ES(buffer, this.type, ts.slice(1));\n            } else {\n                throw new Error('format is not supported');\n            }\n        }\n    }\n    static ES (buffer, type, ts) {\n        let next;\n        if (type === 'video') {\n            next = buffer.readUint32();\n            if (next !== 1) {\n                buffer.back(4);\n                next = buffer.readUint24();\n                if (next !== 1) {\n                    throw new Error('h264 nal header parse failed');\n                }\n            }\n            buffer.skip(2);// 09 F0\n            this.sps = readSPS(buffer);\n            this.pps = readPPS(buffer);\n            let nal;\n            if (this.sps.length) {\n                this.info = new ExpGolomb(new Uint8Array(this.sps)).readSPS();\n                nal = buffer.readUint24();\n            } else {\n                nal = buffer.readUint24();\n                if (nal === 0) {\n                    nal = buffer.readUint8();\n                }\n            }\n            if (nal === 1) {\n                let vdata = TS.Merge(buffer, ts);\n                this.buffer = Concat(Uint8Array, buffer.writeUint32(vdata.byteLength), vdata);\n            } else {\n                throw new Error('h264 convert to avcc error');\n            }\n        } else if (type === 'audio') {\n            next = buffer.readUint16();\n            // adts的同步字节，12位\n            if (next >>> 4 !== 0xfff) {\n                throw new Error('aac ES parse Error');\n            }\n            const fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n            this.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n            this.layer = next >>> 1 & 0x03;\n            this.absent = next & 0x01;\n            next = buffer.readUint16();\n            this.audioObjectType = (next >>> 14 & 0x03) + 1;\n            this.profile = this.audioObjectType - 1;\n            this.frequencyIndex = next >>> 10 & 0x0f;\n            this.frequence = fq[this.frequencyIndex];\n            this.channel = next >>> 6 & 0x07;\n            this.frameLength = (next & 0x03) << 11 | (buffer.readUint16() >>> 5);\n            this.audioConfig = TS.getAudioConfig(this.audioObjectType, this.channel, this.frequencyIndex);\n            buffer.skip(1);\n            this.buffer = TS.Merge(buffer, ts);\n            // console.log(this.buffer);\n        } else {\n            throw `ES ${type} is not supported`;\n        }\n    }\n    static TSDT () {\n        return {};\n    }\n    static CAT (buffer, it) {\n        this.tableID = buffer.readUint8();\n        let next = buffer.readUint16();\n        this.sectionIndicator = next >>> 7;\n        this.sectionLength = next & 0x0fff;\n        buffer.skip(2);\n        next = buffer.readUint8();\n        this.version = next >>> 3;\n        this.currentNextIndicator = next & 0x01;\n        this.sectionNumber = buffer.readUint8();\n        this.lastSectionNumber = buffer.readUint8();\n        let N = (this.sectionLength - 9) / 4, list = [];\n        for (let i = 0; i < N; i++) {\n            list.push({});\n        }\n        this.crc32 = buffer.readUint32();\n    }\n    static Merge (buffer, ts) {\n        let length = buffer.length - buffer.position, data, offset = length;\n        ts.forEach(item=>{\n            length += item.body.buffer.length;\n        });\n        data = new Uint8Array(length);\n        data.set(new Uint8Array(buffer.buffer, buffer.position), 0);\n        ts.forEach(item=>{\n            buffer = item.body.buffer;\n            data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n            offset += buffer.length - buffer.position;\n        });\n        return data;\n    }\n    static getAudioConfig (audioObjectType, channel, sampleIndex) {\n        let userAgent = navigator.userAgent.toLowerCase(), config, extensionSampleIndex;\n        if (/firefox/i.test(userAgent)) {\n            if (sampleIndex >= 6) {\n                audioObjectType = 5;\n                config = new Array(4);\n                extensionSampleIndex = sampleIndex - 3;\n            } else {\n                audioObjectType = 2;\n                config = new Array(2);\n                extensionSampleIndex = sampleIndex;\n            }\n        } else if (userAgent.indexOf('android') !== -1) {\n            audioObjectType = 2;\n            config = new Array(2);\n            extensionSampleIndex = sampleIndex;\n        } else {\n            audioObjectType = 5;\n            config = new Array(4);\n            if (sampleIndex >= 6) {\n                extensionSampleIndex = sampleIndex - 3;\n            } else {\n                if (channel === 1) {\n                    audioObjectType = 2;\n                    config = new Array(2);\n                }\n                extensionSampleIndex = sampleIndex;\n            }\n        }\n\n        config[0] = audioObjectType << 3;\n        config[0] |= (sampleIndex & 0x0e) >> 1;\n        config[1] = (sampleIndex & 0x01) << 7;\n        config[1] |= channel << 3;\n        if (audioObjectType === 5) {\n            config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n            config[2] = (extensionSampleIndex & 0x01) << 7;\n            config[2] |= 2 << 2;\n            config[3] = 0;\n        }\n        return config;\n    }\n}\nTS.PATSpace = [];\nexport default TS;\n","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Concat from 'concat-typed-array'\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n  write (...buffer) {\n    let self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.error(item)\n      }\n    })\n  }\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import EventEmitter from 'event-emitter'\n\nclass MSE {\n  constructor (codecs = 'video/mp4; codecs=\"avc1.64001E, mp4a.40.5\"') {\n    let self = this\n    EventEmitter(this)\n    this.codecs = codecs\n    this.mediaSource = new window.MediaSource()\n    this.url = window.URL.createObjectURL(this.mediaSource)\n    this.queue = []\n\n    this.mediaSource.addEventListener('sourceopen', function () {\n      self.sourceBuffer = self.mediaSource.addSourceBuffer(self.codecs)\n      self.sourceBuffer.addEventListener('error', function (e) {\n        self.emit('error', {\n          type: 'sourceBuffer',\n          error: e\n        })\n      })\n      self.sourceBuffer.addEventListener('updateend', function (e) {\n        self.emit('updateend')\n        let buffer = self.queue.shift()\n        if (buffer) {\n          self.sourceBuffer.appendBuffer(buffer)\n        }\n      })\n      self.emit('sourceopen')\n      self.sourceBuffer.addEventListener('error', function (e) {\n        self.emit('error', {\n          type: 'mediaSource',\n          error: e\n        })\n      })\n    })\n    this.mediaSource.addEventListener('sourceclose', function () {\n      self.emit('sourceclose')\n    })\n  }\n\n  get state () {\n    return this.mediaSource.readyState\n  }\n\n  get duration () {\n    return this.mediaSource.duration\n  }\n\n  set duration (value) {\n    this.mediaSource.duration = value\n  }\n\n  appendBuffer (buffer) {\n    let sourceBuffer = this.sourceBuffer\n    if (sourceBuffer.updating === false && this.state === 'open') {\n      sourceBuffer.appendBuffer(buffer)\n      return true\n    } else {\n      this.queue.push(buffer)\n      return false\n    }\n  }\n\n  removeBuffer (start, end) {\n    this.sourceBuffer.remove(start, end)\n  }\n\n  endOfStream () {\n    if (this.mediaSource.readyState === 'open') {\n      this.mediaSource.endOfStream()\n    }\n  }\n\n  static isSupported (codecs) {\n    return window.MediaSource && window.MediaSource.isTypeSupported(codecs)\n  }\n}\n\nexport default MSE\n","import Player from 'xgplayer'\nimport HLS from './hls'\nimport MSE from './media/mse'\n\nconst isEnded = (player, hls) => {\n  if (hls.type === 'vod') {\n    if (player.duration - player.currentTime < 2) {\n      const range = player.getBufferedRange()\n      if (player.currentTime - range[1] < 0.1) {\n        player.mse.endOfStream()\n      }\n    }\n  }\n}\n\nconst hlsplayer = function () {\n  let player = this\n\n  let sniffer = Player.sniffer\n\n  let util = Player.util\n  const preloadTime = player.config.preloadTime || 15\n  if (['chrome', 'firfox', 'safari'].some(item => item === sniffer.browser) && MSE.isSupported('video/mp4; codecs=\"avc1.64001E, mp4a.40.5\"')) {\n    const _start = player.start\n    let hls\n    Object.defineProperty(player, 'src', {\n      get () {\n        return player.currentSrc\n      },\n      set (url) {\n        player.config.url = url\n        if (!player.paused) {\n          player.pause()\n          player.once('pause', () => {\n            player.start(url)\n          })\n          player.once('canplay', () => {\n            player.play()\n          })\n        } else {\n          player.start(url)\n        }\n        player.once('canplay', () => {\n          player.currentTime = 0\n        })\n      },\n      configurable: true\n    })\n    player.start = function (url = player.config.url) {\n      if (!url) { return }\n      hls = new HLS(url)\n      player.mse = hls.mse\n      player.hls = hls\n      player.download = () => {\n        hls.download()\n      }\n      hls.m3u8.once('ready', () => {\n        if (hls.type === 'live') {\n          util.addClass(player.root, 'xgplayer-is-live')\n          const live = util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n          player.controls.appendChild(live)\n          const timer = setInterval(() => {\n            if (player.paused && player.buffered.length) {\n              for (let i = 0, len = player.buffered.length; i < len; i++) {\n                if (player.buffered.start(i) > player.currentTime) {\n                  player.currentTime = player.buffered.start(i)\n                  clearInterval(timer)\n                  break\n                }\n              }\n            }\n          }, 200)\n        } else {\n          clearTimeout(hls.m3u8.timer)\n        }\n      })\n      _start.call(player, hls.mse.url)\n    }\n\n    const loadData = (time = player.currentTime) => {\n      const range = player.getBufferedRange()\n      if (time < range[1]) {\n        if (hls.type === 'vod') {\n          if (range[1] - time < preloadTime) {\n            hls.seek(range[1] + 1)\n          }\n        }\n      } else {\n        hls.seek(time)\n      }\n    }\n\n    player.on('timeupdate', () => {\n      loadData(player.currentTime + 1)\n      isEnded(player, hls)\n    })\n\n    player.on('seeking', () => {\n      loadData()\n    })\n\n    player.on('waiting', () => {\n      if (hls.type === 'live') {\n        let buffered = player.buffered\n        let length = buffered.length\n        let currentTime = player.currentTime\n        for (let i = 0; i < length; i++) {\n          if (buffered.start(i) > currentTime) {\n            player.currentTime = buffered.start(i) + 0.1\n            break\n          }\n        }\n      } else {\n        hls.seek()\n      }\n    })\n\n    player.once('destroy', () => {\n      clearTimeout(hls.m3u8.timer)\n    })\n  }\n}\n\nPlayer.install('hlsplayer', hlsplayer)\n","(function() { module.exports = window[\"Player\"]; }());","import EventEmitter from 'event-emitter'\nimport M3U8 from './ts/m3u8'\nimport Parser from './ts/parser'\nimport TS from './ts/ts'\nimport Buffer from './fmp4/buffer'\nimport MP4 from './fmp4/mp4'\nimport Task from './media/task'\nimport MSE from './media/mse'\n\nclass HLS {\n  constructor (url) {\n    EventEmitter(this)\n    let mse = new MSE()\n    this.mse = mse\n    this.url = url\n    this.init(url)\n    this.inited = false\n    this.cache = new Buffer()\n  }\n  init (url) {\n    let m3u8 = new M3U8(url)\n    let hls = this\n    m3u8.once('ready', () => {\n      this.type = m3u8.type\n      if (hls.type === 'vod') {\n        hls.seek(0)\n      } else {\n        if (hls.seeker) {\n          clearInterval(hls.seeker)\n        }\n        this.once('end', () => {\n          if (hls.seeker) {\n            clearInterval(hls.seeker)\n          }\n        })\n        hls.seek()\n        hls.seeker = setInterval(function () {\n          hls.seek()\n        }, 2000)\n      }\n    })\n    m3u8.once('end', () => {\n      if (this.type === 'live') {\n        this.mse.endOfStream()\n      }\n    })\n    this.m3u8 = m3u8\n  }\n  seek (time) {\n    let segment = this.m3u8.seek(time)\n    if (segment.length && !segment[0].downloaded) {\n      const tasker = new Task(segment[0].url, (res) => {\n        let ts = new Parser(res)\n        this.parse(ts)\n        let url = segment[0].url\n        this.m3u8.segments.every(item => {\n          if (item.url !== url) {\n            return true\n          } else {\n            item.downloaded = true\n            return false\n          }\n        })\n      })\n    }\n  }\n  parse (ts, segment) {\n    let pes = []; let video = []; let audio = []; let self = this\n    ts.pes.forEach(item => {\n      let _pes = new TS.PES(item)\n      pes.push(_pes)\n      if (_pes.type === 'video') {\n        video.push(_pes)\n      }\n      if (_pes.type === 'audio') {\n        audio.push(_pes)\n      }\n    })\n    video.some(item => {\n      if (item.ES.sps.length) {\n        let es = item.ES\n        let as = audio[0].ES\n        let duration = 0\n        self.m3u8.segments.forEach(item => {\n          duration += item.duration * 1\n        })\n        self.meta = {\n          sps: es.sps,\n          pps: es.pps,\n          width: es.info.width,\n          height: es.info.height,\n          pixelRatio: es.info.pixelRatio,\n          channelCount: as.channel,\n          timescale: as.frequence,\n          samplerate: as.frequence,\n          profile: as.profile,\n          duration: duration,\n          audioConfig: audio[0].ES.audioConfig\n        }\n        return false\n      }\n    })\n    self.videoSamples = video\n    self.audioSamples = audio\n    if (self.meta) {\n      if (self.startDTS === undefined) {\n        self.startDTS = Math.min(video[0].dts, audio[0].pts)\n      }\n      self.initSegment(self.meta)\n    } else {\n      self.seek()\n    }\n  }\n  initSegment (data) {\n    if (!this.inited) {\n      let buffer = new Buffer()\n      buffer.write(MP4.ftyp())\n      buffer.write(MP4.moov(data))\n      this.mse.appendBuffer(buffer.buffer)\n      this.inited = true\n      this.cache.write(buffer.buffer)\n    }\n    this.createVideoFragment()\n    this.createAudioFragment()\n  }\n  addFragment (data) {\n    let buffer = new Buffer()\n    buffer.write(MP4.moof(data))\n    buffer.write(MP4.mdat(data))\n    this.mse.appendBuffer(buffer.buffer)\n    this.cache.write(buffer.buffer)\n    this.mse.once('updateend', () => {\n      this.update()\n    })\n  }\n  createVideoFragment () {\n    let video = this.videoSamples\n\n    let samplesLength = video.length\n\n    let sampleDuration = (video[samplesLength - 1].dts - video[0].dts) / samplesLength\n    let samples, startDTS\n    startDTS = this.startDTS\n    samples = video.map((item, idx) => {\n      let duration\n      if (idx + 1 === samplesLength) {\n        duration = sampleDuration\n      } else {\n        duration = video[idx + 1].dts - item.dts\n      }\n      return {\n        size: item.ES.buffer.byteLength,\n        duration: duration,\n        offset: item.pts - item.dts,\n        buffer: item.ES.buffer,\n        key: !!item.ES.pps.length\n      }\n    })\n    this.addFragment({\n      id: 1,\n      time: video[0].dts - startDTS,\n      firstFlags: 0x2000000,\n      flags: 0xf01,\n      samples: samples\n    })\n  }\n  createAudioFragment () {\n    let audio = this.audioSamples; let samplesLength = audio.length; let startPTS = this.startDTS || 0\n    let samples, duration\n    samples = audio.map((item, idx) => {\n      if (idx + 1 === samplesLength) {\n        duration = (audio[samplesLength - 1].pts - audio[0].pts) / samplesLength\n      } else {\n        duration = audio[idx + 1].pts - item.pts\n      }\n      return {\n        size: item.ES.buffer.byteLength,\n        duration,\n        offset: 0,\n        buffer: item.ES.buffer,\n        key: true\n      }\n    })\n    this.addFragment({\n      id: 2,\n      time: audio[0].pts - startPTS,\n      firstFlags: 0x00,\n      flags: 0x701,\n      samples: samples\n    })\n  }\n  reset () {\n    this.init(this.url)\n  }\n\n  update () {\n    let sourceBuffer = this.mse.sourceBuffer\n    let segments = this.m3u8.segments\n    let buffer = sourceBuffer.buffered; let start; let end\n    for (let i = 0, len = buffer.length; i < len; i++) {\n      start = buffer.start(i)\n      end = buffer.end(i)\n      for (let j = 0, jLen = segments.length, segment; j < jLen; j++) {\n        segment = segments[i]\n        if (segment.start >= start && segment.end <= end) {\n          segment.downloaded = true\n        }\n      }\n    }\n  }\n}\n\nexport default HLS\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","import EventEmitter from 'event-emitter'\nimport XHR from '../util/xhr'\n\nclass M3U8 {\n  constructor (url) {\n    this.url = url\n    this.segments = []\n    this.retryMax = 10\n    this.retry = 0\n    this.type = 'live'\n    this.isEnd = false\n    this.timer = null\n    this.rangeDuration = 2000\n    this.duration = 0\n    this.init(url)\n    EventEmitter(this)\n  }\n  fetch (url) {\n    let meta = {TYPE: 'LIVE', ENDLIST: ''}\n    let segments = []\n    return new Promise((resolve, reject) => {\n      new XHR({type: '', url}).then((res) => {\n        let ctx = res.responseText\n        if (ctx) {\n          const metaCtx = ctx.substring(0, ctx.indexOf('#EXTINF'))\n          const endList = ctx.substring(ctx.lastIndexOf('#EXTINF'))\n          const Tag = M3U8.Tag\n          const EXTINFItem = new RegExp(Tag.EXTINF.source)\n          Object.keys(Tag).forEach((key) => {\n            if (key !== 'EXTINF' && (Tag[key].test(metaCtx) || Tag[key].test(endList))) {\n              meta[key] = RegExp.$2 ? [RegExp.$1, RegExp.$2] : RegExp.$1 || true\n            }\n          })\n          ctx.match(Tag.EXTINF).forEach((item, idx) => {\n            if (EXTINFItem.test(item)) {\n              let time = RegExp.$1 * 1\n              let title = RegExp.$2\n              let _url = M3U8.resolve(url, title)\n              segments.push({\n                idx,\n                duration: time,\n                title: title,\n                downloaded: false,\n                url: _url\n              })\n            }\n          })\n          if (meta['SEQUENCE'] * 1 === 0 && meta['ENDLIST']) {\n            meta.TYPE = 'VOD'\n          }\n          resolve({meta, segments})\n        } else {\n          reject(new Error('parse error'))\n        }\n      }).catch((err) => {\n        reject(err)\n      })\n    })\n  }\n  init (url) {\n    let self = this\n    let segments = self.segments\n    this.fetch(url).then((res) => {\n      self.type = res.meta.TYPE.toLocaleLowerCase()\n      self.isEnd = res.meta.ENDLIST\n      res.segments.forEach(item => {\n        segments.push(item)\n      })\n      self.emit('ready')\n    }, () => {\n      segments.length = 0\n      self.retry++\n      if (self.retry < self.retryMax) {\n        self.init(url)\n      }\n    })\n  }\n  seek (time) {\n    let segments = this.segments\n    let r\n    if (this.type === 'vod' || time !== undefined) {\n      if (segments[0].start === undefined) {\n        let start = 0\n        for (let i = 0, len = segments.length, segment; i < len; i++) {\n          segment = segments[i]\n          segment.start = start\n          start += segment.duration\n          segment.end = start\n        }\n      }\n      r = segments.filter((item) => {\n        return item.start <= time && time < item.end && !item.downloaded\n      })\n    } else {\n      r = segments.filter(item => !item.downloaded)\n      if (this.type === 'live' && segments.filter(item => !item.downloaded).length < 3) {\n        this.update(1)\n      }\n    }\n    return r\n  }\n  reset () {\n    this.segments.length = 0\n    this.isEnd = false\n    this.type = 'live'\n    if (this.timer) {\n      clearInterval(this.timer)\n      this.timer = null\n    }\n    this.init(this.url)\n  }\n  update (rightnow) {\n    let self = this\n    let url = self.url\n    let segments = self.segments\n    if (self.timer) {\n      clearTimeout(self.timer)\n    }\n    self.timer = setTimeout(function () {\n      let count = 0\n      self.fetch(url).then(res => {\n        res.segments.forEach(item => {\n          if (!segments.some(url => item.url === url.url)) {\n            count++\n            segments.push(item)\n          }\n        })\n        if (count <= 0) {\n          self.update()\n        }\n      }, () => {\n        self.retry++\n        if (self.retry < self.retryMax) {\n          self.update()\n        } else {\n          self.emit('end')\n        }\n      })\n    }, rightnow ? 0 : self.rangeDuration)\n  }\n  static resolve (base, url) {\n    let result = []\n    let a = document.createElement('a')\n    a.href = base\n    let b = url\n    let aArr = a.pathname.replace(/^\\/+/, '').split('/')\n    let bArr = b.split('/')\n    aArr.pop()\n    let find = () => {\n      switch (bArr[0]) {\n        case '':\n          result = bArr.slice(1)\n          break\n        case '.':\n          result = aArr.concat(bArr.slice(1))\n          break\n        case '..':\n          bArr.shift()\n          if (aArr.length) {\n            aArr.pop()\n            find()\n          } else {\n            throw new Error('path in invalid')\n          }\n          break\n        default:\n          result = aArr.concat(bArr)\n      }\n    }\n    find()\n    if (result.length) {\n      result = a.protocol + '//' + a.host + '/' + result.join('/')\n    } else {\n      result = b.href\n    }\n    return result\n  }\n}\n\nM3U8.Tag = {\n  EXTM3U: /^#EXTM3U/,\n  TYPE: /#EXT-X-PLAYLIST-TYPE:(\\w+)/,\n  EXTINF: /#EXTINF:(\\d+\\.?\\d*)(?:,(?:[^\\r|\\n]*)(?:\\r|\\n)*)(.*(?!#))/g,\n  DURATION: /#EXT-X-TARGETDURATION:(\\d+\\.?\\d*)/,\n  SEQUENCE: /#EXT-X-MEDIA-SEQUENCE:(\\d+)/,\n  ENDLIST: /#EXT-X-ENDLIST/,\n  VERSION: /#EXT-X-VERSION:(\\d+)/,\n  STREAM: /#EXT-X-STREAM-INF:(\\w+=\\w+)+/\n}\n\nexport default M3U8\n","class XHR {\n  constructor ({url, method = 'GET', type = 'arraybuffer', data = {}} = {}) {\n    return new Promise((resolve, reject) => {\n      let R = new window.XMLHttpRequest()\n      let _method = method.toUpperCase()\n      let _data = []\n      if (type) {\n        R.responseType = type\n      }\n      for (let k in data) {\n        _data.push(`k=${data[k]}`)\n      }\n      if (_method === 'GET') {\n        R.open(_method, `${url}?${_data.join('&')}`)\n        R.send()\n      } else if (_method === 'post') {\n        R.open(_method, url)\n        R.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n        R.send(_data.join('&'))\n      } else {\n        throw new Error(`xhr ${_method} is not supported`)\n      }\n      R.onload = () => {\n        if (R.status === 200 || R.status === 206) {\n          resolve(R)\n        } else {\n          reject(R)\n        }\n      }\n      R.onerror = () => {\n        reject(R)\n      }\n    })\n  }\n}\n\nexport default XHR\n","import TS from './ts';\nclass Parser {\n    constructor (ctx) {\n        this.buffer = ctx;\n        this.ts = [];\n        let count = 0, length = this.buffer.byteLength;\n        while (count < length) {\n            this.ts.push(new TS(this.buffer.slice(count, count + 188), count / 188));\n            count += 188;\n        }\n        delete this.buffer;\n    }\n    get pat () {\n        return this.ts.filter((item) => item.header.pid === 0);\n    }\n\n    get pmt () {\n        let pat = this.pat, list = [];\n        pat.forEach(item=>{\n            item.body.list.filter(sub=>{\n                list.push(sub.pid);\n            });\n        });\n        return this.ts.filter((item) => list.some(b=>b === item.header.pid));\n    }\n\n    get pes () {\n        let pmt = this.pmt, pid = [], pes = [];\n        pmt.forEach(item=>{\n            pid = pid.concat(item.body.list.map(b=>{ return b.pid; }));\n        });\n        let ts = this.ts, length = ts.length, cur, videoGroup = [], audioGroup = [];\n        for (var i = 0; i < length; i++) {\n            cur = ts[i];\n            if (pid.indexOf(cur.header.pid) > -1) {\n                if (cur.body.type === 'video') {\n                    if (cur.header.payload === 1) {\n                        videoGroup = [];\n                        videoGroup.push(cur);\n                        pes.push(videoGroup);\n                    } else if (videoGroup.length === 0) {\n                        pes.push([cur]);\n                    } else {\n                        videoGroup.push(cur);\n                    }\n\n                } else if (cur.body.type === 'audio') {\n                    if (cur.header.payload === 1) {\n                        audioGroup = [];\n                        audioGroup.push(cur);\n                        pes.push(audioGroup);\n                    } else if (audioGroup.length === 0) {\n                        pes.push([cur]);\n                    } else {\n                        audioGroup.push(cur);\n                    }\n                }\n            }\n        }\n        return pes;\n    }\n}\nexport default Parser;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","class Stream {\n    constructor (buffer) {\n        if (buffer instanceof ArrayBuffer) {\n            this.buffer = buffer;\n            this.dataview = new DataView(buffer);\n            this.dataview.position = 0;\n        } else {\n            throw new Error('data is invalid');\n        }\n    }\n    get length () {\n        return this.buffer.byteLength;\n    }\n    set position (value) {\n        this.dataview.position = value;\n    }\n\n    get position () {\n        return this.dataview.position;\n    }\n    back (count) {\n        this.position -= count;\n    }\n    skip (count) {\n        let loop = Math.floor(count / 4);\n        let last = count % 4;\n        for (let i = 0; i < loop; i++) {\n            Stream.readByte(this.dataview, 4);\n        }\n        if (last > 0) {\n            Stream.readByte(this.dataview, last);\n        }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n    static readByte (buffer, size, sign) {\n        let res;\n        switch (size) {\n            case 1:\n                if (sign) {\n                    res = buffer.getInt8(buffer.position);\n                } else {\n                    res = buffer.getUint8(buffer.position);\n                }\n                break;\n            case 2:\n                if (sign) {\n                    res = buffer.getInt16(buffer.position);\n                } else {\n                    res = buffer.getUint16(buffer.position);\n                }\n                break;\n            case 3:\n                if (sign) {\n                    throw 'not supported for readByte 3';\n                } else {\n                    res = buffer.getUint8(buffer.position) << 16;\n                    res |= buffer.getUint8(buffer.position + 1) << 8;\n                    res |= buffer.getUint8(buffer.position + 2);\n                }\n                break;\n            case 4:\n                if (sign) {\n                    res = buffer.getInt32(buffer.position);\n                } else {\n                    res = buffer.getUint32(buffer.position);\n                }\n                break;\n            case 8:\n                if (sign) {\n                    throw 'not supported for readBody 8';\n                } else {\n                    res = buffer.getUint32(buffer.position) << 32;\n                    res |= buffer.getUint32(buffer.position + 4);\n                }\n                break;\n            default:\n                res = '';\n        }\n        buffer.position += size;\n        return res;\n    }\n\n    readUint8 () {\n        return Stream.readByte(this.dataview, 1);\n    }\n\n    readUint16 () {\n        return Stream.readByte(this.dataview, 2);\n    }\n\n    readUint24 () {\n        return Stream.readByte(this.dataview, 3);\n    }\n\n    readUint32 () {\n        return Stream.readByte(this.dataview, 4);\n    }\n\n    readUint64 () {\n        return Stream.readByte(this.dataview, 8);\n    }\n\n    readInt8 () {\n        return Stream.readByte(this.dataview, 1, true);\n    }\n    readInt16 () {\n        return Stream.readByte(this.dataview, 2, true);\n    }\n    readInt32 () {\n        return Stream.readByte(this.dataview, 4, true);\n    }\n    writeUint32 (value) {\n        return new Uint8Array([\n            value >>> 24 & 0xff,\n            value >>> 16 & 0xff,\n            value >>> 8 & 0xff,\n            value & 0xff,\n        ]);\n    }\n\n}\n\nexport default Stream;\n","class ExpGolomb {\n  constructor (data) {\n    this.data = data\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = data.byteLength\n    // the current word being examined\n    this.word = 0 // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0 // :uint\n  }\n  // ():void\n  loadWord () {\n    var data = this.data,\n      bytesAvailable = this.bytesAvailable,\n      position = data.byteLength - bytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, bytesAvailable)\n    if (availableBytes === 0) {\n      throw new Error('no bytes available')\n    }\n    workingBytes.set(data.subarray(position, position + availableBytes))\n    this.word = new DataView(workingBytes.buffer).getUint32(0)\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8\n    this.bytesAvailable -= availableBytes\n  }\n\n  // (count:int):void\n  skipBits (count) {\n    var skipBytes // :int\n    if (this.bitsAvailable > count) {\n      this.word <<= count\n      this.bitsAvailable -= count\n    } else {\n      count -= this.bitsAvailable\n      skipBytes = count >> 3\n      count -= (skipBytes >> 3)\n      this.bytesAvailable -= skipBytes\n      this.loadWord()\n      this.word <<= count\n      this.bitsAvailable -= count\n    }\n  }\n\n  // (size:int):uint\n  readBits (size) {\n    var bits = Math.min(this.bitsAvailable, size), // :uint\n      valu = this.word >>> (32 - bits) // :uint\n    if (size > 32) {\n      window.console.error('Cannot read more than 32 bits at a time')\n    }\n    this.bitsAvailable -= bits\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord()\n    }\n    bits = size - bits\n    if (bits > 0 && this.bitsAvailable) {\n      return valu << bits | this.readBits(bits)\n    } else {\n      return valu\n    }\n  }\n\n  // ():uint\n  skipLZ () {\n    var leadingZeroCount // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n      if ((this.word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount\n        this.bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  // ():void\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  // ():void\n  skipEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  // ():uint\n  readUEG () {\n    var clz = this.skipLZ() // :uint\n    return this.readBits(clz + 1) - 1\n  }\n\n  // ():int\n  readEG () {\n    var valu = this.readUEG() // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1 // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1) // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean () {\n    return this.readBits(1) === 1\n  }\n\n  // ():int\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  // ():int\n  readUShort () {\n    return this.readBits(16)\n  }\n  // ():int\n  readUInt () {\n    return this.readBits(32)\n  }\n\n  /**\n* Advance the ExpGolomb decoder past a scaling list. The scaling\n* list is optionally transmitted as part of a sequence parameter\n* set and is not relevant to transmuxing.\n* @param count {number} the number of entries in this scaling list\n* @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n*/\n  skipScalingList (count) {\n    var lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = (nextScale === 0)\n        ? lastScale\n        : nextScale\n    }\n  }\n\n  /**\n* Read a sequence parameter set and return some interesting video\n* properties. A sequence parameter set is the H264 metadata that\n* describes the properties of upcoming video frames.\n* @param data {Uint8Array} the bytes of a sequence parameter set\n* @return {object} an object with configuration parsed from the\n* sequence parameter set, including the dimensions of the\n* associated video frames.\n*/\n  readSPS () {\n    var frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      profileIdc,\n      profileCompat,\n      levelIdc,\n      numRefFramesInPicOrderCntCycle,\n      picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      i,\n      readUByte = this.readUByte.bind(this),\n      readBits = this.readBits.bind(this),\n      readUEG = this.readUEG.bind(this),\n      readBoolean = this.readBoolean.bind(this),\n      skipBits = this.skipBits.bind(this),\n      skipEG = this.skipEG.bind(this),\n      skipUEG = this.skipUEG.bind(this),\n      skipScalingList = this.skipScalingList.bind(this)\n\n    readUByte()\n    profileIdc = readUByte() // profile_idc\n    profileCompat = readBits(5) // constraint_set[0-4]_flag, u(5)\n    skipBits(3) // reserved_zero_3bits u(3),\n    levelIdc = readUByte() // level_idc u(8)\n    skipUEG() // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n    if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128) {\n      var chromaFormatIdc = readUEG()\n      if (chromaFormatIdc === 3) {\n        skipBits(1) // separate_colour_plane_flag\n      }\n      skipUEG() // bit_depth_luma_minus8\n      skipUEG() // bit_depth_chroma_minus8\n      skipBits(1) // qpprime_y_zero_transform_bypass_flag\n      if (readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3)\n          ? 8\n          : 12\n        for (i = 0; i < scalingListCount; i++) {\n          if (readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16)\n            } else {\n              skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n    skipUEG() // log2_max_frame_num_minus4\n    var picOrderCntType = readUEG()\n    if (picOrderCntType === 0) {\n      readUEG() // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      skipBits(1) // delta_pic_order_always_zero_flag\n      skipEG() // offset_for_non_ref_pic\n      skipEG() // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = readUEG()\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        skipEG() // offset_for_ref_frame[ i ]\n      }\n    }\n    skipUEG() // max_num_ref_frames\n    skipBits(1) // gaps_in_frame_num_value_allowed_flag\n    picWidthInMbsMinus1 = readUEG()\n    picHeightInMapUnitsMinus1 = readUEG()\n    frameMbsOnlyFlag = readBits(1)\n    if (frameMbsOnlyFlag === 0) {\n      skipBits(1) // mb_adaptive_frame_field_flag\n    }\n    skipBits(1) // direct_8x8_inference_flag\n    if (readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = readUEG()\n      frameCropRightOffset = readUEG()\n      frameCropTopOffset = readUEG()\n      frameCropBottomOffset = readUEG()\n    }\n    let pixelRatio = [1, 1]\n    if (readBoolean()) {\n      // vui_parameters_present_flag\n      if (readBoolean()) {\n        // aspect_ratio_info_present_flag\n        const aspectRatioIdc = readUByte()\n        switch (aspectRatioIdc) {\n          case 1:\n            pixelRatio = [1, 1]\n            break\n          case 2:\n            pixelRatio = [12, 11]\n            break\n          case 3:\n            pixelRatio = [10, 11]\n            break\n          case 4:\n            pixelRatio = [16, 11]\n            break\n          case 5:\n            pixelRatio = [40, 33]\n            break\n          case 6:\n            pixelRatio = [24, 11]\n            break\n          case 7:\n            pixelRatio = [20, 11]\n            break\n          case 8:\n            pixelRatio = [32, 11]\n            break\n          case 9:\n            pixelRatio = [80, 33]\n            break\n          case 10:\n            pixelRatio = [18, 11]\n            break\n          case 11:\n            pixelRatio = [15, 11]\n            break\n          case 12:\n            pixelRatio = [64, 33]\n            break\n          case 13:\n            pixelRatio = [160, 99]\n            break\n          case 14:\n            pixelRatio = [4, 3]\n            break\n          case 15:\n            pixelRatio = [3, 2]\n            break\n          case 16:\n            pixelRatio = [2, 1]\n            break\n          case 255:\n          {\n            pixelRatio = [\n              readUByte() << 8 | readUByte(),\n              readUByte() << 8 | readUByte()\n            ]\n            break\n          }\n        }\n      }\n    }\n    return {\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2)),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((\n        frameMbsOnlyFlag\n          ? 2\n          : 4) * (frameCropTopOffset + frameCropBottomOffset)),\n      pixelRatio: pixelRatio\n    }\n  }\n\n  readSliceType () {\n    // skip NALu type\n    this.readUByte()\n    // discard first_mb_in_slice\n    this.readUEG()\n    // return slice_type\n    return this.readUEG()\n  }\n}\n\nexport default ExpGolomb\n","import Buffer from './buffer'\nconst UINT32_MAX = Math.pow(2, 32) - 1\nclass FMP4 {\n  static type (name) {\n    return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n  }\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(24), FMP4.type('ftyp'), new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n    return buffer.buffer\n  }\n  static moov (data) {\n    let buffer = new Buffer(); let size = 8\n    let mvhd = FMP4.mvhd(data.duration)\n    let trak1 = FMP4.videoTrak(data)\n    let trak2 = FMP4.audioTrak(data)\n    let mvex = FMP4.mvex(data.duration);\n    [mvhd, trak1, trak2, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('moov'), mvhd, trak1, trak2, mvex)\n    return buffer.buffer\n  }\n  static mvhd (duration) {\n    let buffer = new Buffer()\n    let timescale = 90000\n    duration *= timescale\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let bytes = new Uint8Array([\n      0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ])\n    buffer.write(FMP4.size(8 + bytes.length), FMP4.type('mvhd'), new Uint8Array(bytes))\n    return buffer.buffer\n  }\n  static videoTrak (data) {\n    let buffer = new Buffer(); let size = 8\n    let tkhd = FMP4.tkhd({\n      id: 1,\n      duration: data.duration,\n      timescale: 90000,\n      width: data.width,\n      height: data.height,\n      type: 'video'\n    })\n    let mdia = FMP4.mdia({\n      type: 'video',\n      timescale: 90000,\n      duration: data.duration,\n      sps: data.sps,\n      pps: data.pps,\n      pixelRatio: data.pixelRatio,\n      width: data.width,\n      height: data.height\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('trak'), tkhd, mdia)\n    return buffer.buffer\n  }\n  static audioTrak (data) {\n    let buffer = new Buffer(); let size = 8\n    let tkhd = FMP4.tkhd({\n      id: 2,\n      duration: data.duration,\n      timescale: 90000,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = FMP4.mdia({\n      type: 'audio',\n      timescale: 90000,\n      duration: data.duration,\n      channelCount: data.channelCount,\n      samplerate: data.samplerate,\n      audioConfig: data.audioConfig\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('trak'), tkhd, mdia)\n    return buffer.buffer\n  }\n  static tkhd (data) {\n    let buffer = new Buffer()\n    let id = data.id\n\n    let duration = data.duration * data.timescale\n\n    let width = data.width\n\n    let height = data.height\n\n    let type = data.type\n\n    let upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n\n    let lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let content = new Uint8Array([\n      0x01, // version 1\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (id >> 24) & 0xff,\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, type === 'video' ? 0x01 : 0x00, // alternate_group\n      type === 'audio' ? 0x01 : 0x00, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (width >> 8) & 0xff,\n      width & 0xff,\n      0x00, 0x00, // width\n      (height >> 8) & 0xff,\n      height & 0xff,\n      0x00, 0x00 // height\n    ])\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('tkhd'), content)\n    return buffer.buffer\n  }\n  static edts (data) {\n    let buffer = new Buffer(); let duration = data.duration; let mediaTime = data.mediaTime\n    buffer.write(FMP4.size(36), FMP4.type('edts'))\n    // elst\n    buffer.write(FMP4.size(28), FMP4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let buffer = new Buffer(); let size = 8\n    let mdhd = FMP4.mdhd(data.timescale)\n    let hdlr = FMP4.hdlr(data.type)\n    let minf = FMP4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mdia'), mdhd, hdlr, minf)\n    return buffer.buffer\n  }\n  static mdhd (timescale, duration = 0) {\n    let buffer = new Buffer()\n    duration *= timescale\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x55, 0xc4, // 'und' language\n      0x00, 0x00\n    ])\n    buffer.write(FMP4.size(12 + content.byteLength), FMP4.type('mdhd'), FMP4.extension(1, 0), content)\n    return buffer.buffer\n  }\n  static hdlr (type) {\n    let buffer = new Buffer()\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    buffer.write(FMP4.size(8 + value.length), FMP4.type('hdlr'), new Uint8Array(value))\n    return buffer.buffer\n  }\n  static minf (data) {\n    let buffer = new Buffer(); let size = 8\n    let vmhd = data.type === 'video' ? FMP4.vmhd() : FMP4.smhd()\n    let dinf = FMP4.dinf()\n    let stbl = FMP4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('minf'), vmhd, dinf, stbl)\n    return buffer.buffer\n  }\n  static vmhd () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(20), FMP4.type('vmhd'), new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n    return buffer.buffer\n  }\n  static smhd () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(16), FMP4.type('smhd'), new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n    return buffer.buffer\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(FMP4.size(36), FMP4.type('dinf'), FMP4.size(28), FMP4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let buffer = new Buffer(); let size = 8\n    let stsd = FMP4.stsd(data)\n    let stts = FMP4.stts()\n    let stsc = FMP4.stsc()\n    let stsz = FMP4.stsz()\n    let stco = FMP4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('stbl'), stsd, stts, stsc, stsz, stco)\n    return buffer.buffer\n  }\n  static stsd (data) {\n    let buffer = new Buffer(); let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = FMP4.mp4a(data)\n    } else {\n      content = FMP4.avc1(data)\n    }\n    buffer.write(FMP4.size(16 + content.byteLength), FMP4.type('stsd'), FMP4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n    return buffer.buffer\n  }\n  static mp4a (data) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = FMP4.esds(data.audioConfig)\n    buffer.write(FMP4.size(8 + content.byteLength + esds.byteLength), FMP4.type('mp4a'), content, esds)\n    return buffer.buffer\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer(); let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    let sps = data.sps; let pps = data.pps; let width = data.width; let height = data.height; let hSpacing = data.pixelRatio[0]; let vSpacing = data.pixelRatio[1]\n    let avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1 // 目前只处理一个sps\n    ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff]).concat(sps).concat(1).concat([pps.length >>> 8 & 0xff, pps.length & 0xff]).concat(pps))\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      FMP4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), FMP4.type('avc1'), avc1,\n      FMP4.size(8 + avcc.byteLength), FMP4.type('avcC'), avcc,\n      FMP4.size(20), FMP4.type('btrt'), btrt,\n      FMP4.size(16), FMP4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stts'), content)\n    return buffer.buffer\n  }\n  static stsc () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stsc'), content)\n    return buffer.buffer\n  }\n  static stco () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stco'), content)\n    return buffer.buffer\n  }\n  static stsz () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    buffer.write(FMP4.size(20), FMP4.type('stsz'), content)\n    return buffer.buffer\n  }\n  static mvex (duration) {\n    let buffer = new Buffer()\n    let mehd = Buffer.writeUint32(duration * 90000)\n    buffer.write(FMP4.size(88), FMP4.type('mvex'), FMP4.size(16), FMP4.type('mehd'), FMP4.extension(0, 0), mehd, FMP4.trex(1), FMP4.trex(2))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('trex'), content)\n    return buffer.buffer\n  }\n  static moof (data) {\n    let buffer = new Buffer(); let size = 8\n    let mfhd = FMP4.mfhd()\n    let traf = FMP4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('moof'), mfhd, traf)\n    return buffer.buffer\n  }\n  static mfhd () {\n    let buffer = new Buffer()\n    let content = Buffer.writeUint32(FMP4.sequence)\n    FMP4.sequence += 1\n    buffer.write(FMP4.size(16), FMP4.type('mfhd'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static traf (data) {\n    let buffer = new Buffer(); let size = 8\n    let tfhd = FMP4.tfhd(data.id)\n    let tfdt = FMP4.tfdt(data.time)\n    let sdtp = FMP4.sdtp(data)\n    let trun = FMP4.trun(data, sdtp.byteLength);\n    [tfhd, tfdt, sdtp, trun].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('traf'), tfhd, tfdt, sdtp, trun)\n    return buffer.buffer\n  }\n  static tfhd (id) {\n    let buffer = new Buffer()\n    let content = Buffer.writeUint32(id)\n    buffer.write(FMP4.size(16), FMP4.type('tfhd'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static tfdt (time) {\n    let buffer = new Buffer()\n    let upper = Math.floor(time / (UINT32_MAX + 1))\n\n    let lower = Math.floor(time % (UINT32_MAX + 1))\n    buffer.write(FMP4.size(20), FMP4.type('tfdt'), FMP4.extension(1, 0), Buffer.writeUint32(upper), Buffer.writeUint32(lower))\n    return buffer.buffer\n  }\n  static trun (data, sdtpLength) {\n    let id = data.id\n    let ceil = id === 1 ? 16 : 12\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 20 + 12 + 4 + 4 + ceil * data.samples.length + sdtpLength)\n    buffer.write(FMP4.size(20 + ceil * data.samples.length), FMP4.type('trun'), FMP4.extension(0, data.flags), sampleCount, offset)\n    data.samples.forEach((item, idx) => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      if (id === 1) {\n        buffer.write(Buffer.writeUint32(item.key ? 0x02000000 : 0x01010000))\n        buffer.write(Buffer.writeUint32(item.offset))\n      } else {\n        buffer.write(Buffer.writeUint32(0x1000000))\n      }\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(12 + data.samples.length), FMP4.type('sdtp'), FMP4.extension(0, 0))\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.id === 1 ? [item.key ? 32 : 16] : [16]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer(); let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mdat'))\n    data.samples.forEach(item => {\n      buffer.write(item.buffer)\n    })\n    return buffer.buffer\n  }\n}\n\nFMP4.sequence = 1\n\nexport default FMP4\n","class Task {\n  constructor (url, callback) {\n    this.url = url\n    this.on = false\n    if (Task.queue.some(item => item.url === url)) {\n      return\n    }\n    let xhr = new XMLHttpRequest()\n    xhr.target = this\n    xhr.responseType = 'arraybuffer'\n    xhr.open('get', url)\n    xhr.onload = function () {\n      if (xhr.status === 200 || xhr.status === 206) {\n        if (callback && callback instanceof Function) {\n          callback(xhr.response)\n        }\n      }\n      xhr.target.remove()\n    }\n    xhr.onerror = function () {\n      xhr.target.remove()\n    }\n    xhr.onabort = function () {\n      xhr.target.remove()\n    }\n    this.xhr = xhr\n    Task.queue.push(this)\n    this.update()\n  }\n  cancel () {\n    this.xhr.abort()\n  }\n\n  remove () {\n    Task.queue.filter((item, idx) => {\n      if (item.url === this.url) {\n        Task.queue.splice(idx, 1)\n        return true\n      } else {\n        return false\n      }\n    })\n    this.update()\n  }\n\n  update () {\n    let Queue = Task.queue\n    let sended = Queue.filter((item) => item.on)\n    let wait = Queue.filter(item => !item.on)\n    let max = Task.limit - sended.length\n    wait.forEach((item, idx) => {\n      if (idx < max) {\n        item.run()\n      }\n    })\n  }\n\n  run () {\n    if (this.xhr.readyState === 1) {\n      this.on = true\n      this.xhr.send()\n    } else {\n      this.remove()\n    }\n  }\n\n  static clear () {\n    Task.queue.forEach(item => {\n      if (item.on) {\n        item.cancel()\n      }\n    })\n    Task.queue.length = 0\n  }\n}\n\nTask.queue = []\nTask.limit = 2\nwindow.Task = Task\n\nexport default Task\n"],"sourceRoot":""}